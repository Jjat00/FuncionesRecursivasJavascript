const { mayorValor, promedio, invertirOrden, buscarIndice, insertarElementoListaOrdenada, ordenarAscendente, serieFiboacci, eliminarCaracteres, insertarElemento, buscarElemento, eliminar, concatenarListas, mayorque, buscarPares, map, suma2 } = require('../src/index');

test('1. Mayor Valor de [1,2,3] tiene que dar 3', () => { expect(mayorValor([1, 2, 3])).toBe(3) })
test('2. Promedio de [1,2,3] tiene que dar 2', () => { expect(promedio([1, 2, 3])).toBe(2) })
test('3. Invertir orden de [1,2,3] tiene que dar [3,2,1]', () => { expect(invertirOrden([1, 2, 3])).toStrictEqual([3, 2, 1]) })
test('4. Ordenar ascendentemente [2,5,1] tiene que dar [1,2,5]', () => { expect(ordenarAscendente([2, 5, 1])).toStrictEqual([1, 2, 5]) })
test('5. Serie Fibinacci de 4 tiene que dar [1,1,2,3,5]', () => { expect(serieFiboacci(4)).toStrictEqual([1, 1, 2, 3, 5]) })
test('6. Eliminar caracteres [2,5,"a",1,"b"] tiene que dar [2,5,1]', () => { expect(eliminarCaracteres([2, 5, "a", 1, "b"])).toStrictEqual([2, 5, 1]) })
test('7. Insertar 2 en la posicion 3  de  [1,3,5,5,6] tiene que dar [1,3,5,2,5,6] ', () => { expect(insertarElemento(2, 3, [1, 3, 5, 5, 6])).toStrictEqual([1, 3, 5, 2, 5, 6]) })
test('8. buscar 3 en la lista [1,3,5,5,6] debe retornar la posición 1', () => { expect(buscarIndice(3, [1, 3, 5, 5, 6])).toBe(1) })
test('9. Insertar dato 7 en lista  [1,3,8,6] debe retornar [1,3,6,7,8] ', () => { expect(insertarElementoListaOrdenada(7, [1, 3, 8, 6])).toStrictEqual([1, 3, 6, 7, 8]) })
test('10. Buscar elemento 6 en [1,3,5,5,6] tiene que dar true ', () => { expect(buscarElemento(6, [1, 3, 5, 5, 6])).toBe(true) })
test('11. Eliminar el elemento de la posición 1 de  [1,3,5,5,6] tiene que dar [1,5,5,6] ', () => { expect(eliminar(1, [1, 3, 5, 5, 6])).toStrictEqual([1, 5, 5, 6]) })
test('12. Concatenar [1,3,4] con [5,6,7] tiene que dar [1,3,4,5,6,7] ', () => { expect(concatenarListas([1, 3, 4], [5, 6, 7])).toStrictEqual([1, 3, 4, 5, 6, 7]) })
test('13. Retorna los valores mayores que 5 de [1,3,10,12,2] tiene que dar [10,12] ', () => { expect(mayorque(5, [1, 3, 10, 12, 2])).toStrictEqual([10, 12]) })
test('14. Retorna los elementos pares de [1,3,10,12,2] tiene que dar [10,12,2] ', () => { expect(buscarPares([1, 3, 10, 12, 2])).toStrictEqual([10, 12, 2]) })
test('15. Suma 2 a cada elemento de la lista [1,3,10] tiene que dar [3,5,12] ', () => { expect(map(suma2, [1, 3, 10])).toStrictEqual([3, 5, 12]) })